<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\magic.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\magic.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 6190004: Last Updated: Wed May  8 16:54:43 2024
<BR><P>
<H3>Maximum Stack Usage =        260 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; drv10970_init &rArr; pwm1_init &rArr; TIM_OutputEdgeAlignedPwmConfig &rArr; TIM_SetSyncPairCCVCmd
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[36]">ADC0_DriverIRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[36]">ADC0_DriverIRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[36]">ADC0_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[14]">ADC0_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[3c]">CAN0_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[1a]">CAN0_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[3d]">CAN1_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[1b]">CAN1_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[38]">CMP_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[16]">CMP_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[28]">DMA0TO3_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[6]">DMA0TO3_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[2b]">DMA12TO15_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[9]">DMA12TO15_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[29]">DMA4TO7_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[7]">DMA4TO7_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[2a]">DMA8TO11_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[8]">DMA8TO11_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[2c]">DMAERR_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[a]">DMAERR_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[43]">EWDT_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[21]">EWDT_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[37]">FLASH_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[15]">FLASH_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[2]">HardFault_Handler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[2d]">I2C0_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[b]">I2C0_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[2e]">I2C1_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[c]">I2C1_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[1]">NMI_Handler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[3f]">PMU_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[1d]">PMU_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[46]">PORTABC_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[24]">PORTABC_IRQHandler</a> from z20k11xm_gpio.o(.text.PORTABC_IRQHandler) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[47]">PORTDE_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[25]">PORTDE_IRQHandler</a> from z20k11xm_gpio.o(.text.PORTDE_IRQHandler) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[4]">PendSV_Handler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[3e]">RTC_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[1c]">RTC_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[0]">Reset_Handler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[41]">SCC_DriverIRQHandler</a> from z20k11xm_clock.o(.text.SCC_DriverIRQHandler) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[1f]">SCC_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[2f]">SPI0_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[d]">SPI0_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[30]">SPI1_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[e]">SPI1_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[31]">SPI2_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[f]">SPI2_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[45]">SRMC_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[23]">SRMC_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[48]">STIMTEST_IntCallBack</a> from delay.o(.text.STIMTEST_IntCallBack) referenced from delay.o(.text.delay_init)
 <LI><a href="#[44]">STIM_DriverIRQHandler</a> from z20k11xm_stim.o(.text.STIM_DriverIRQHandler) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[22]">STIM_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[3]">SVC_Handler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[5]">SysTick_Handler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[40]">TDG0_DriverIRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[1e]">TDG0_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[39]">TIM0_DriverIRQHandler</a> from z20k11xm_tim.o(.text.TIM0_DriverIRQHandler) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[17]">TIM0_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[3a]">TIM1_DriverIRQHandler</a> from z20k11xm_tim.o(.text.TIM1_DriverIRQHandler) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[18]">TIM1_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[3b]">TIM2_DriverIRQHandler</a> from z20k11xm_tim.o(.text.TIM2_DriverIRQHandler) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[19]">TIM2_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[32]">UART0_DriverIRQHandler</a> from z20k11xm_uart.o(.text.UART0_DriverIRQHandler) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[10]">UART0_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[33]">UART1_DriverIRQHandler</a> from z20k11xm_uart.o(.text.UART1_DriverIRQHandler) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[11]">UART1_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[34]">UART2_DriverIRQHandler</a> from z20k11xm_uart.o(.text.UART2_DriverIRQHandler) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[12]">UART2_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[35]">UART3_DriverIRQHandler</a> from z20k11xm_uart.o(.text.UART3_DriverIRQHandler) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[13]">UART3_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[42]">WDOG_DriverIRQHandler</a> from z20k11xm_wdog.o(.text.WDOG_DriverIRQHandler) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[20]">WDOG_IRQHandler</a> from z20k118m_startup.o(.text) referenced from z20k118m_startup.o(.intvec)
 <LI><a href="#[27]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from z20k118m_startup.o(.text)
 <LI><a href="#[26]">main</a> from main.o(.text.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
 <LI><a href="#[49]">tim2_ch2_cbf</a> from drv10970.o(.text.tim2_ch2_cbf) referenced from drv10970.o(.text.tim2_ch2_init)
 <LI><a href="#[4a]">uart1_callBack</a> from uart.o(.text.uart1_callBack) referenced from uart.o(.text.uart1_init)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[27]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[a5]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry4.o(.ARM.Collect$$$$00000003))

<P><STRONG><a name="[4b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[57]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a6]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a7]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a9]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[aa]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[6]"></a>DMA0TO3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[7]"></a>DMA4TO7_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[8]"></a>DMA8TO11_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[9]"></a>DMA12TO15_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[a]"></a>DMAERR_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[b]"></a>I2C0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[d]"></a>SPI0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[10]"></a>UART0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[11]"></a>UART1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[12]"></a>UART2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[13]"></a>UART3_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[14]"></a>ADC0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[15]"></a>FLASH_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[16]"></a>CMP_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[17]"></a>TIM0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[18]"></a>TIM1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[19]"></a>TIM2_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[1a]"></a>CAN0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[1b]"></a>CAN1_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[1c]"></a>RTC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[1d]"></a>PMU_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[1e]"></a>TDG0_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[1f]"></a>SCC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[20]"></a>WDOG_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[21]"></a>EWDT_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[22]"></a>STIM_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[23]"></a>SRMC_IRQHandler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[36]"></a>ADC0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_DriverIRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_DriverIRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[3c]"></a>CAN0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[3d]"></a>CAN1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[38]"></a>CMP_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[28]"></a>DMA0TO3_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[2b]"></a>DMA12TO15_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[29]"></a>DMA4TO7_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>DMA8TO11_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[2c]"></a>DMAERR_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[43]"></a>EWDT_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[37]"></a>FLASH_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[2d]"></a>I2C0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[2e]"></a>I2C1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[3f]"></a>PMU_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[46]"></a>PORTABC_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[47]"></a>PORTDE_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[3e]"></a>RTC_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[2f]"></a>SPI0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[30]"></a>SPI1_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[31]"></a>SPI2_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[45]"></a>SRMC_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[40]"></a>TDG0_DriverIRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, z20k118m_startup.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[69]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Confic
</UL>

<P><STRONG><a name="[4d]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_speed2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_spped1
</UL>

<P><STRONG><a name="[4f]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_speed2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_spped1
</UL>

<P><STRONG><a name="[51]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_speed2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_spped1
</UL>

<P><STRONG><a name="[6a]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Confic
</UL>

<P><STRONG><a name="[90]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_speed2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_spped1
</UL>

<P><STRONG><a name="[52]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_speed2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_spped1
</UL>

<P><STRONG><a name="[5a]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetModuleClkFreq
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitOSC40MSwitchReady
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[7f]"></a>__aeabi_uidivmod</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, uidiv_div0.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[55]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ab]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[56]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[ac]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>

<P><STRONG><a name="[ae]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[4e]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>

<P><STRONG><a name="[4c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[af]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[6e]"></a>CLK_FIRC64MMonitorDisable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, z20k11xm_clock.o(.text.CLK_FIRC64MMonitorDisable))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCC_DriverIRQHandler
</UL>

<P><STRONG><a name="[58]"></a>CLK_GetModuleClkFreq</STRONG> (Thumb, 832 bytes, Stack size 48 bytes, z20k11xm_clock.o(.text.CLK_GetModuleClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CLK_GetModuleClkFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetSysClkFreq
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
</UL>

<P><STRONG><a name="[5c]"></a>CLK_GetSysClkSrc</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, z20k11xm_clock.o(.text.CLK_GetSysClkSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = CLK_GetSysClkSrc
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_OSC40MEnable2
</UL>

<P><STRONG><a name="[61]"></a>CLK_ModuleSrc</STRONG> (Thumb, 756 bytes, Stack size 24 bytes, z20k11xm_clock.o(.text.CLK_ModuleSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CLK_ModuleSrc
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FR_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[5b]"></a>CLK_OSC40MEnable2</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, z20k11xm_clock.o(.text.CLK_OSC40MEnable2))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = CLK_OSC40MEnable2 &rArr; CLK_WaitOSC40MSwitchReady &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClkReady
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetSysClkSrc
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitOSC40MSwitchReady
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6d]"></a>CLK_OSC40MMonitorDisable</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, z20k11xm_clock.o(.text.CLK_OSC40MMonitorDisable))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCC_DriverIRQHandler
</UL>

<P><STRONG><a name="[96]"></a>CLK_SetClkDivider</STRONG> (Thumb, 784 bytes, Stack size 20 bytes, z20k11xm_clock.o(.text.CLK_SetClkDivider))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CLK_SetClkDivider
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5f]"></a>CLK_SysClkSrc</STRONG> (Thumb, 180 bytes, Stack size 16 bytes, z20k11xm_clock.o(.text.CLK_SysClkSrc))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = CLK_SysClkSrc &rArr; CLK_WaitClkReady
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_WaitClkReady
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>CLK_WaitClkReady</STRONG> (Thumb, 228 bytes, Stack size 16 bytes, z20k11xm_clock.o(.text.CLK_WaitClkReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CLK_WaitClkReady
</UL>
<BR>[Called By]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SysClkSrc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_OSC40MEnable2
</UL>

<P><STRONG><a name="[65]"></a>GPIO_SetPinDir</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, z20k11xm_gpio.o(.text.GPIO_SetPinDir))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_SetPinDir
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FR_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[66]"></a>GPIO_WritePinOutput</STRONG> (Thumb, 60 bytes, Stack size 20 bytes, z20k11xm_gpio.o(.text.GPIO_WritePinOutput))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_WritePinOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FR_init
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fr_control_dir
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[24]"></a>PORTABC_IRQHandler</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, z20k11xm_gpio.o(.text.PORTABC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PORTABC_IRQHandler &rArr; PORT_IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_IntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[25]"></a>PORTDE_IRQHandler</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, z20k11xm_gpio.o(.text.PORTDE_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PORTDE_IRQHandler &rArr; PORT_IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_IntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.intvec)
</UL>
<P><STRONG><a name="[64]"></a>PORT_PinInit</STRONG> (Thumb, 292 bytes, Stack size 28 bytes, z20k11xm_gpio.o(.text.PORT_PinInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = PORT_PinInit
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FR_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[63]"></a>PORT_PinmuxConfig</STRONG> (Thumb, 112 bytes, Stack size 20 bytes, z20k11xm_gpio.o(.text.PORT_PinmuxConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PORT_PinmuxConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FR_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
</UL>

<P><STRONG><a name="[68]"></a>PWM_Confic</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, main.o(.text.PWM_Confic))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = PWM_Confic &rArr; TIM_SetCCVal
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ReloadSyncCmd
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCCVal
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[41]"></a>SCC_DriverIRQHandler</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, z20k11xm_clock.o(.text.SCC_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCC_DriverIRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_FIRC64MMonitorDisable
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_OSC40MMonitorDisable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[44]"></a>STIM_DriverIRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, z20k11xm_stim.o(.text.STIM_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = STIM_DriverIRQHandler &rArr; STIM_IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STIM_IntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[89]"></a>STIM_Enable</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, z20k11xm_stim.o(.text.STIM_Enable))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = STIM_Enable
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[86]"></a>STIM_Init</STRONG> (Thumb, 200 bytes, Stack size 24 bytes, z20k11xm_stim.o(.text.STIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = STIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[87]"></a>STIM_InstallCallBackFunc</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, z20k11xm_stim.o(.text.STIM_InstallCallBackFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = STIM_InstallCallBackFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[88]"></a>STIM_IntCmd</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, z20k11xm_stim.o(.text.STIM_IntCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = STIM_IntCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[62]"></a>SYSCTRL_EnableModule</STRONG> (Thumb, 660 bytes, Stack size 12 bytes, z20k11xm_sysctrl.o(.text.SYSCTRL_EnableModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCTRL_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FR_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[98]"></a>SYSCTRL_ResetModule</STRONG> (Thumb, 608 bytes, Stack size 12 bytes, z20k11xm_sysctrl.o(.text.SYSCTRL_ResetModule))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SYSCTRL_ResetModule
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
</UL>

<P><STRONG><a name="[39]"></a>TIM0_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, z20k11xm_tim.o(.text.TIM0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM0_DriverIRQHandler &rArr; TIM_IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_IntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[3a]"></a>TIM1_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, z20k11xm_tim.o(.text.TIM1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM1_DriverIRQHandler &rArr; TIM_IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_IntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[3b]"></a>TIM2_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, z20k11xm_tim.o(.text.TIM2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = TIM2_DriverIRQHandler &rArr; TIM_IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_IntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[7a]"></a>TIM_CNTINTUpdateModeSelect</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, z20k11xm_tim.o(.text.TIM_CNTINTUpdateModeSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_CNTINTUpdateModeSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SyncConfig
</UL>

<P><STRONG><a name="[9a]"></a>TIM_ChannelOutputEnable</STRONG> (Thumb, 172 bytes, Stack size 16 bytes, z20k11xm_tim.o(.text.TIM_ChannelOutputEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_ChannelOutputEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
</UL>

<P><STRONG><a name="[78]"></a>TIM_ChannleMatchReloadCmd</STRONG> (Thumb, 232 bytes, Stack size 20 bytes, z20k11xm_tim.o(.text.TIM_ChannleMatchReloadCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_ChannleMatchReloadCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ReloadParamConfig
</UL>

<P><STRONG><a name="[99]"></a>TIM_CountingModeConfig</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, z20k11xm_tim.o(.text.TIM_CountingModeConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_CountingModeConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
</UL>

<P><STRONG><a name="[94]"></a>TIM_GetCCVal</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, z20k11xm_tim.o(.text.TIM_GetCCVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_GetCCVal
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_IC2_cnt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_IC1_cnt
</UL>

<P><STRONG><a name="[9c]"></a>TIM_InstallCallBackFunc</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, z20k11xm_tim.o(.text.TIM_InstallCallBackFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_InstallCallBackFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_init
</UL>

<P><STRONG><a name="[9d]"></a>TIM_IntMask</STRONG> (Thumb, 520 bytes, Stack size 36 bytes, z20k11xm_tim.o(.text.TIM_IntMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TIM_IntMask
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_init
</UL>

<P><STRONG><a name="[7b]"></a>TIM_OSWCUpdateModeSelect</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, z20k11xm_tim.o(.text.TIM_OSWCUpdateModeSelect))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_OSWCUpdateModeSelect
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SyncConfig
</UL>

<P><STRONG><a name="[71]"></a>TIM_OutputEdgeAlignedPwmConfig</STRONG> (Thumb, 308 bytes, Stack size 56 bytes, z20k11xm_tim.o(.text.TIM_OutputEdgeAlignedPwmConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = TIM_OutputEdgeAlignedPwmConfig &rArr; TIM_SetSyncPairCCVCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetSyncPairCCVCmd
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetFaultCtrlCmd
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetOutputPolarity
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCombineCmd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetDualEdgeCaptureCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
</UL>

<P><STRONG><a name="[77]"></a>TIM_ReloadParamConfig</STRONG> (Thumb, 328 bytes, Stack size 32 bytes, z20k11xm_tim.o(.text.TIM_ReloadParamConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = TIM_ReloadParamConfig &rArr; TIM_ChannleMatchReloadCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ChannleMatchReloadCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SyncConfig
</UL>

<P><STRONG><a name="[6c]"></a>TIM_ReloadSyncCmd</STRONG> (Thumb, 56 bytes, Stack size 12 bytes, z20k11xm_tim.o(.text.TIM_ReloadSyncCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_ReloadSyncCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Confic
</UL>

<P><STRONG><a name="[7c]"></a>TIM_SWTriggerSyncCmd</STRONG> (Thumb, 76 bytes, Stack size 12 bytes, z20k11xm_tim.o(.text.TIM_SWTriggerSyncCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = TIM_SWTriggerSyncCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SyncConfig
</UL>

<P><STRONG><a name="[6b]"></a>TIM_SetCCVal</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, z20k11xm_tim.o(.text.TIM_SetCCVal))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_SetCCVal
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_IC2_cnt
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_IC1_cnt
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Confic
</UL>

<P><STRONG><a name="[9b]"></a>TIM_StartCounter</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, z20k11xm_tim.o(.text.TIM_StartCounter))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TIM_StartCounter
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
</UL>

<P><STRONG><a name="[79]"></a>TIM_SyncConfig</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, z20k11xm_tim.o(.text.TIM_SyncConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TIM_SyncConfig &rArr; TIM_ReloadParamConfig &rArr; TIM_ChannleMatchReloadCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ReloadParamConfig
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OSWCUpdateModeSelect
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CNTINTUpdateModeSelect
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SWTriggerSyncCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
</UL>

<P><STRONG><a name="[32]"></a>UART0_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, z20k11xm_uart.o(.text.UART0_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART0_DriverIRQHandler &rArr; UART_IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[33]"></a>UART1_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, z20k11xm_uart.o(.text.UART1_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART1_DriverIRQHandler &rArr; UART_IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[34]"></a>UART2_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, z20k11xm_uart.o(.text.UART2_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART2_DriverIRQHandler &rArr; UART_IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[35]"></a>UART3_DriverIRQHandler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, z20k11xm_uart.o(.text.UART3_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = UART3_DriverIRQHandler &rArr; UART_IntHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[81]"></a>UART_GetBusyStatus</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, z20k11xm_uart.o(.text.UART_GetBusyStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_GetBusyStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitBusyClear
</UL>

<P><STRONG><a name="[9f]"></a>UART_GetLineStatus</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, z20k11xm_uart.o(.text.UART_GetLineStatus))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_GetLineStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_callBack
</UL>

<P><STRONG><a name="[7e]"></a>UART_Init</STRONG> (Thumb, 368 bytes, Stack size 64 bytes, z20k11xm_uart.o(.text.UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = UART_Init &rArr; CLK_GetModuleClkFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetModuleClkFreq
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>

<P><STRONG><a name="[a2]"></a>UART_InstallCallBackFunc</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, z20k11xm_uart.o(.text.UART_InstallCallBackFunc))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_InstallCallBackFunc
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>

<P><STRONG><a name="[a3]"></a>UART_IntMask</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, z20k11xm_uart.o(.text.UART_IntMask))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = UART_IntMask
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>

<P><STRONG><a name="[a0]"></a>UART_ReceiveByte</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, z20k11xm_uart.o(.text.UART_ReceiveByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = UART_ReceiveByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_callBack
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>

<P><STRONG><a name="[a1]"></a>UART_SendByte</STRONG> (Thumb, 28 bytes, Stack size 12 bytes, z20k11xm_uart.o(.text.UART_SendByte))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UART_SendByte
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_callBack
</UL>

<P><STRONG><a name="[80]"></a>UART_WaitBusyClear</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, z20k11xm_uart.o(.text.UART_WaitBusyClear))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_WaitBusyClear &rArr; UART_GetBusyStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetBusyStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>

<P><STRONG><a name="[82]"></a>WDOG_Disable</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, z20k11xm_wdog.o(.text.WDOG_Disable))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = WDOG_Disable &rArr; WDOG_WaitConfigCompleted
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDOG_WaitConfigCompleted
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDOG_UNLOCK_CONFIG
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>WDOG_DriverIRQHandler</STRONG> (Thumb, 48 bytes, Stack size 16 bytes, z20k11xm_wdog.o(.text.WDOG_DriverIRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = WDOG_DriverIRQHandler &rArr; WDOG_UNLOCK_CONFIG
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDOG_UNLOCK_CONFIG
</UL>
<BR>[Address Reference Count : 1]<UL><LI> z20k118m_startup.o(.text)
</UL>
<P><STRONG><a name="[85]"></a>delay_init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, delay.o(.text.delay_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = delay_init &rArr; STIM_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STIM_Enable
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STIM_IntCmd
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STIM_InstallCallBackFunc
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STIM_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_ModuleSrc
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[8b]"></a>drv10970_init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, drv10970.o(.text.drv10970_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 212<LI>Call Chain = drv10970_init &rArr; pwm1_init &rArr; TIM_OutputEdgeAlignedPwmConfig &rArr; TIM_SetSyncPairCCVCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FR_init
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pwm1_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>fr_control_dir</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, drv10970.o(.text.fr_control_dir))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = fr_control_dir &rArr; GPIO_WritePinOutput
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePinOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[92]"></a>get_IC1_cnt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, enconder.o(.text.get_IC1_cnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_IC1_cnt &rArr; TIM_SetCCVal
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCCVal
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCCVal
</UL>
<BR>[Called By]<UL><LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_spped1
</UL>

<P><STRONG><a name="[8f]"></a>get_IC2_cnt</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, enconder.o(.text.get_IC2_cnt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = get_IC2_cnt &rArr; TIM_SetCCVal
</UL>
<BR>[Calls]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_GetCCVal
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SetCCVal
</UL>
<BR>[Called By]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_speed2
</UL>

<P><STRONG><a name="[95]"></a>led_init</STRONG> (Thumb, 190 bytes, Stack size 72 bytes, led.o(.text.led_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = led_init &rArr; PORT_PinInit
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePinOutput
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinDir
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_PinInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_PinmuxConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_ModuleSrc
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 484 bytes, Stack size 48 bytes, main.o(.text.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 260<LI>Call Chain = main &rArr; drv10970_init &rArr; pwm1_init &rArr; TIM_OutputEdgeAlignedPwmConfig &rArr; TIM_SetSyncPairCCVCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fr_control_dir
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PWM_Confic
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv10970_init
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;led_init
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetClkDivider
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_EnableModule
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDOG_Disable
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SysClkSrc
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_OSC40MEnable2
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[8c]"></a>pwm1_init</STRONG> (Thumb, 228 bytes, Stack size 128 bytes, pwm.o(.text.pwm1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 204<LI>Call Chain = pwm1_init &rArr; TIM_OutputEdgeAlignedPwmConfig &rArr; TIM_SetSyncPairCCVCmd
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_StartCounter
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ChannelOutputEnable
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CountingModeConfig
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_SyncConfig
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OutputEdgeAlignedPwmConfig
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ResetModule
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_PinmuxConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_ModuleSrc
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetClkDivider
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv10970_init
</UL>

<P><STRONG><a name="[4a]"></a>uart1_callBack</STRONG> (Thumb, 336 bytes, Stack size 24 bytes, uart.o(.text.uart1_callBack))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = uart1_callBack &rArr; UART_GetLineStatus
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_SendByte
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_GetLineStatus
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
</UL>
<BR>[Address Reference Count : 1]<UL><LI> uart.o(.text.uart1_init)
</UL>
<P><STRONG><a name="[97]"></a>uart1_init</STRONG> (Thumb, 160 bytes, Stack size 64 bytes, uart.o(.text.uart1_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = uart1_init &rArr; UART_Init &rArr; CLK_GetModuleClkFreq &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_Init
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_IntMask
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_InstallCallBackFunc
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_ReceiveByte
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART_WaitBusyClear
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_PinmuxConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_ModuleSrc
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetClkDivider
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[54]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[b0]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[b1]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[b2]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[a4]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, uart.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart1_init
</UL>

<P><STRONG><a name="[8a]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, delay.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay_init
</UL>

<P><STRONG><a name="[48]"></a>STIMTEST_IntCallBack</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, delay.o(.text.STIMTEST_IntCallBack))
<BR>[Address Reference Count : 1]<UL><LI> delay.o(.text.delay_init)
</UL>
<P><STRONG><a name="[60]"></a>FR_init</STRONG> (Thumb, 128 bytes, Stack size 56 bytes, drv10970.o(.text.FR_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = FR_init &rArr; PORT_PinInit
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_WritePinOutput
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetPinDir
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_PinInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORT_PinmuxConfig
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_ModuleSrc
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv10970_init
</UL>

<P><STRONG><a name="[8d]"></a>tim2_ch2_init</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, drv10970.o(.text.tim2_ch2_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = tim2_ch2_init &rArr; TIM_IntMask
</UL>
<BR>[Calls]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_IntMask
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_InstallCallBackFunc
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__NVIC_EnableIRQ
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_StartCounter
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_CountingModeConfig
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_ResetModule
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_ModuleSrc
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_SetClkDivider
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYSCTRL_EnableModule
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;drv10970_init
</UL>

<P><STRONG><a name="[9e]"></a>__NVIC_EnableIRQ</STRONG> (Thumb, 32 bytes, Stack size 4 bytes, drv10970.o(.text.__NVIC_EnableIRQ))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = __NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_init
</UL>

<P><STRONG><a name="[49]"></a>tim2_ch2_cbf</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, drv10970.o(.text.tim2_ch2_cbf))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = tim2_ch2_cbf &rArr; fg_get_speed2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_speed2
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fg_get_spped1
</UL>
<BR>[Address Reference Count : 1]<UL><LI> drv10970.o(.text.tim2_ch2_init)
</UL>
<P><STRONG><a name="[91]"></a>fg_get_spped1</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, drv10970.o(.text.fg_get_spped1))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = fg_get_spped1 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_IC1_cnt
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_cbf
</UL>

<P><STRONG><a name="[8e]"></a>fg_get_speed2</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, drv10970.o(.text.fg_get_speed2))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = fg_get_speed2 &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_IC2_cnt
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
</UL>
<BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tim2_ch2_cbf
</UL>

<P><STRONG><a name="[67]"></a>PORT_IntHandler</STRONG> (Thumb, 172 bytes, Stack size 32 bytes, z20k11xm_gpio.o(.text.PORT_IntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PORT_IntHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTDE_IRQHandler
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTABC_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>CLK_WaitOSC40MSwitchReady</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, z20k11xm_clock.o(.text.CLK_WaitOSC40MSwitchReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CLK_WaitOSC40MSwitchReady &rArr; __aeabi_uidiv
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidiv
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_OSC40MEnable2
</UL>

<P><STRONG><a name="[59]"></a>CLK_GetSysClkFreq</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, z20k11xm_clock.o(.text.CLK_GetSysClkFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CLK_GetSysClkFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CLK_GetModuleClkFreq
</UL>

<P><STRONG><a name="[70]"></a>TIM_IntHandler</STRONG> (Thumb, 512 bytes, Stack size 96 bytes, z20k11xm_tim.o(.text.TIM_IntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TIM_IntHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM2_DriverIRQHandler
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM1_DriverIRQHandler
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM0_DriverIRQHandler
</UL>

<P><STRONG><a name="[73]"></a>TIM_SetDualEdgeCaptureCmd</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, z20k11xm_tim.o(.text.TIM_SetDualEdgeCaptureCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_SetDualEdgeCaptureCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OutputEdgeAlignedPwmConfig
</UL>

<P><STRONG><a name="[72]"></a>TIM_SetCombineCmd</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, z20k11xm_tim.o(.text.TIM_SetCombineCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_SetCombineCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OutputEdgeAlignedPwmConfig
</UL>

<P><STRONG><a name="[74]"></a>TIM_SetOutputPolarity</STRONG> (Thumb, 252 bytes, Stack size 20 bytes, z20k11xm_tim.o(.text.TIM_SetOutputPolarity))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_SetOutputPolarity
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OutputEdgeAlignedPwmConfig
</UL>

<P><STRONG><a name="[75]"></a>TIM_SetFaultCtrlCmd</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, z20k11xm_tim.o(.text.TIM_SetFaultCtrlCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_SetFaultCtrlCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OutputEdgeAlignedPwmConfig
</UL>

<P><STRONG><a name="[76]"></a>TIM_SetSyncPairCCVCmd</STRONG> (Thumb, 144 bytes, Stack size 20 bytes, z20k11xm_tim.o(.text.TIM_SetSyncPairCCVCmd))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TIM_SetSyncPairCCVCmd
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_OutputEdgeAlignedPwmConfig
</UL>

<P><STRONG><a name="[7d]"></a>UART_IntHandler</STRONG> (Thumb, 628 bytes, Stack size 32 bytes, z20k11xm_uart.o(.text.UART_IntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = UART_IntHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART3_DriverIRQHandler
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART2_DriverIRQHandler
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_DriverIRQHandler
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_DriverIRQHandler
</UL>

<P><STRONG><a name="[83]"></a>WDOG_UNLOCK_CONFIG</STRONG> (Thumb, 30 bytes, Stack size 4 bytes, z20k11xm_wdog.o(.text.WDOG_UNLOCK_CONFIG))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = WDOG_UNLOCK_CONFIG
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDOG_Disable
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDOG_DriverIRQHandler
</UL>

<P><STRONG><a name="[84]"></a>WDOG_WaitConfigCompleted</STRONG> (Thumb, 60 bytes, Stack size 12 bytes, z20k11xm_wdog.o(.text.WDOG_WaitConfigCompleted))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = WDOG_WaitConfigCompleted
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WDOG_Disable
</UL>

<P><STRONG><a name="[6f]"></a>STIM_IntHandler</STRONG> (Thumb, 140 bytes, Stack size 16 bytes, z20k11xm_stim.o(.text.STIM_IntHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = STIM_IntHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STIM_DriverIRQHandler
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
